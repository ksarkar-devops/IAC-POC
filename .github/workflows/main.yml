name: Deploy Azure Function with Terraform

on:
  workflow_dispatch:

env:
  TF_VERSION: '1.7.5'
  AZURE_FUNCTION_DIR: './infra'  # Terraform code location

jobs:
  terraform:
    name: Terraform Apply
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Terraform Init
        working-directory: ${{ env.AZURE_FUNCTION_DIR }}
        run: terraform init

      - name: Terraform Format
        working-directory: ${{ env.AZURE_FUNCTION_DIR }}
        run: terraform fmt -recursive

      - name: Terraform Validate
        working-directory: ${{ env.AZURE_FUNCTION_DIR }}
        run: terraform validate

      - name: Destroy runs existing
        run: terraform destroy

      - name: Terraform Plan
        working-directory: ${{ env.AZURE_FUNCTION_DIR }}
        run: terraform plan -var="client_id=${{ secrets.ARM_CLIENT_ID }}" -var="client_secret=${{ secrets.ARM_CLIENT_SECRET }}" -var="tenant_id=${{ secrets.ARM_TENANT_ID }}" -var="subscription_id=${{ secrets.ARM_SUBSCRIPTION_ID }}"

      - name: Terraform Apply
        working-directory: ${{ env.AZURE_FUNCTION_DIR }}
        run: terraform apply -auto-approve -var="client_id=${{ secrets.ARM_CLIENT_ID }}" -var="client_secret=${{ secrets.ARM_CLIENT_SECRET }}" -var="tenant_id=${{ secrets.ARM_TENANT_ID }}" -var="subscription_id=${{ secrets.ARM_SUBSCRIPTION_ID }}"

      - name: Destroy runs if the previous step failed or was skipped
        if: ${{ failure() || cancelled() || steps.Terraform_Apply.outcome != 'success' }}
        run: terraform destroy


  publish:
    name: Deploy Function Code
    needs: terraform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'  # or '6.0.x'

      - name: Build Function App
        run: |
          dotnet publish ./func/MyDotNetFunctionApp.csproj -c Release -o published

      - name: Zip package
        run: |
          cd published && zip -r ../function.zip .

      - name: Upload to Azure Function
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ steps.terraform.outputs.funcapp_name }}
          package: function.zip
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}

